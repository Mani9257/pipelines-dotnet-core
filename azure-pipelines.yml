# ASP.NET Core
# Build and test ASP.NET Core projects targeting .NET Core.
# Add steps that run tests, create a NuGet package, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/dotnet-core

trigger:
- master

pool:
  vmImage: windows-latest

variables:
  buildConfiguration: 'Release'

steps:
- script: dotnet build --configuration $(buildConfiguration)
  displayName: 'dotnet build $(buildConfiguration)'

- task: SonarQubePrepare@5
  inputs:
    SonarQube: 'SonarQube'
    scannerMode: 'MSBuild'
    projectKey: 'java-project_java-project'
    projectName: 'java-project'
- task: DotNetCoreCLI@2
  inputs:
    command: 'build'

- task: SonarQubeAnalyze@5


- task: SonarQubePublish@5
  inputs:
    pollingTimeoutSec: '300'
- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $token = [System.Text.Encoding]::UTF8.GetBytes($env:SonarToken + ":")
      $base64 = [System.Convert]::ToBase64String($token)
       
      $basicAuth = [string]::Format("Basic {0}", $base64)
      $headers = @{ Authorization = $basicAuth }
       
      $result = "Invoke-RestMethod -Method Get -Uri \"http://35.170.71.8:9000/api/project_badges/measure?project=java-project_java-project&metric=alert_status"\ -Headers $headers"
      $result | ConvertTo-Json | Write-Host
       
      if ($result.projectStatus.status -eq "OK") {
      Write-Host "Quality Gate Succeeded"
      }else{
      throw "Quality gate failed"
      }

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $branch = "$(Build.SourceBranch)"
      $branch = $branch -replace 'refs\/heads\/',''
                
      cmd.exe /c  $env:CMDPATH $env:REPO $branch
               
      Write-Host "first"
      $branch = $branch -replace '\/','-'
      Write-Host $branch
      $json=Get-Content $env:JSONPATH\$branch.json | ConvertFrom-Json
      Write-Host "second"
      Write-Host $json.projectStatus.status
      if ($json.projectStatus.status -eq "OK") {
      Write-Host "Quality Gate Succeeded"
      }else{
      throw "Quality gate failed"
      }